# Configuration template.

# You can copy this file and use it as a reference to create your own global
# and local configuration files.


Dir:
  # Global configuration file. Overrides this file. If not found, it will be skipped
  global_config_file: ./config/config.yaml

  # Local configuration file. Overrides global_config. If not found, it will be skipped
  local_config_file: ./config/config.yaml

  # Parameters file. Useful for Procedures that share the same parameters
  parameters_file: ./config/parameters.yaml

  # Procedure configuration. Overrides the parameter defaults if given.
  procedure_config_file: ./config/procedures.yaml

  # Data directory. Where the data will be saved
  data_dir: ./data

  # Database location, relative to the data directory
  database: database.db


############################################
# Adapter configuration
############################################


Adapters:
  # Keithley 2450 USB Device Port
  keithley2450: USB0::0x05E6::0x2450::04448997::0::INSTR

  # Negative Voltage TENMA
  tenma_neg: COM9

  # Positive Voltage TENMA
  tenma_pos: COM3

  # Laser controller TENMA
  tenma_laser: COM4

  # Power meter
  power_meter: COM7

  # Temperature sensor
  pt100_port: COM8

  # temperature sensor clicker
  clicker: COM5

  # Light source
  light_source: COM6


############################################
# PyQt configuration
############################################


Qt:
  GUI:
    # PyQt GUI style. Options vary with OS. Examples: windows11, Fusion (Recommended). Use 'default' for the system's default
    style: Fusion

    # toggle dark mode. If False, the computer's theme will be used
    dark_mode: true

    # Font options. If empty it uses the style's default font
    # font: ''
    font_size: 12

    # Splash screen image. Leave empty to set default
    # splash_image: ''


  ExperimentWindow:
    # title: ''

    # Whether to add a scrollbar
    inputs_in_scrollarea: true

    # Displays a file input widget (not implemented yet)
    enable_file_input: false

    # Number of plots to show in the Dock tab
    dock_plot_number: 2

    # File to open in the Info tab
    info_file: ./docs/led_protocol.md

    # icon: ''


  MainWindow:
    # README file to open in the main window
    readme_file: ./README.md

    title: Laser Setup

    size: [640, 480]

    widget_size: [640, 480]

    # icon: ''

    scripts:
      # List of names and scripts to show in the Scripts tab
      - name: "Set up Adapters"
        alias: setup_adapters
        target: ${function:laser_setup.cli.setup_adapters.setup}

      - name: "Get updates"
        alias: get_updates
        target: ${function:laser_setup.cli.get_updates.main}

      - name: "Parameters to Database"
        alias: parameters_to_db
        target: ${function:laser_setup.cli.parameters_to_db.main}

      - name: "Init Config"
        alias: init
        target: ${function:laser_setup.cli.init_config.init_config}

    procedures:
      # List of names and procedures to show in the Procedures tab
      - name: I vs V
        alias: IV
        target: ${class:laser_setup.procedures.IV}

      - name: I vs Vg
        alias: IVg
        target: ${class:laser_setup.procedures.IVg}

      - name: I vs t
        alias: It
        target: ${class:laser_setup.procedures.It}

      - name: V vs t
        alias: Vt
        target: ${class:laser_setup.procedures.Vt}

      - name: I vs t (Vg)
        alias: ItVg
        target: ${class:laser_setup.procedures.ItVg}

      - name: T vs t
        alias: Tt
        target: ${class:laser_setup.procedures.Tt}

      - name: I vs t (Wl)
        alias: ItWl
        target: ${class:laser_setup.procedures.ItWl}

      - name: P vs t
        alias: Pt
        target: ${class:laser_setup.procedures.Pt}

      - name: P vs wl
        alias: Pwl
        target: ${class:laser_setup.procedures.Pwl}

      - name: Laser Calibration
        alias: LaserCalibration
        target: ${class:laser_setup.procedures.LaserCalibration}

    sequences:
      # List of Procedures to run sequentially.
      MainSequence:
        - ${class:laser_setup.procedures.IVg}
        - ${class:laser_setup.procedures.It}
        - ${class:laser_setup.procedures.IVg}
        - ${class:laser_setup.procedures.Wait}
        - ${class:laser_setup.procedures.IVg}

      TestSequence:
        - ${class:laser_setup.procedures.FakeProcedure.FakeProcedure}
        - ${class:laser_setup.procedures.Wait}


  SequenceWindow:
    # Timeout when aborting a sequence
    abort_timeout: 30

    # Common procedure parameters that will be used for all procedures in the sequence
    common_procedure: ${class:laser_setup.procedures.ChipProcedure}

    # Inputs in common_procedure that should be shown for each procedure
    inputs_ignored: ['show_more', 'skip_startup', 'skip_shutdown']


############################################
# PyMeasure configuration
############################################


Filename:
  # Configure the data filenames. With this config,
  # a file would be created at {config.Dir.data}/YYYY-MM-DD/ProcedureClassYYYY-MM-DD_1.csv
  # File prefix. Leave empty to use the procedure class name instead
  # prefix: ''

  # suffix: ''
  ext: csv
  dated_folder: true
  index: true
  datetimeformat: "%Y-%m-%d"


Logging:
  # Log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
  console: true
  console_level: INFO
  filename: ./log/std.log
  file_level: INFO


matplotlib_rcParams:
  # Matplotlib configuration, parsed by PyMeasure. All values must be strings
  axes.grid: "True"
  figure.autolayout: "True"


############################################
# Extra
############################################


Telegram:
  # Telegram bot token
  token: ''

  # Chat IDs for the Telegram bot to send messages to
  chat_ids:
    - ''
